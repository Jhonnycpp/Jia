# CMakeLists files in this project can
# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and
# to the root binary directory of the project as ${HELLO_BINARY_DIR}.
cmake_minimum_required (VERSION 3.10)
# set(CMAKE_C_COMPILER "clang" CACHE PATH "Path llvm" FORCE)
set(CMAKE_CXX_COMPILER "clang++-9" CACHE PATH "Path llvm" FORCE)

project(jia CXX)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(NOT DEFINED OS)
    message(FATAL_ERROR  "Operation system not defined.")
endif()

if(NOT DEFINED ARCH)
    message(FATAL_ERROR  "Architecture not defined.")
endif()

set(WORKSPACE ${PROJECT_SOURCE_DIR})
set(CMAKE_BINARY_DIR ${WORKSPACE}/build)

string(TOUPPER ${OS} ${OS})

SET(CUSTOM_BUILD_PARAMS "")
SET(CUSTOM_LINKER_PARAMS "")

if(${OS} STREQUAL "WINDOWS")
    include(config/windows.cmake)
    set(OUTTARGET ${ARCH}-windows)
elseif(${OS} STREQUAL "LINUX")
    include(config/linux.cmake)
    set(OUTTARGET ${ARCH}-linux)
elseif(${OS} STREQUAL "MAC")
    include(config/mac.cmake)
    set(OUTTARGET ${ARCH}-mac)
elseif(${OS} STREQUAL "ANDROID")
    include(config/android.cmake)
    set(OUTTARGET ${ARCH}-android)
elseif(${OS} STREQUAL "IOS")
    include(config/ios.cmake)
    set(OUTTARGET ${ARCH}-ios)
endif()

SET(CUSTOM_BUILD_PARAMS "${CUSTOM_BUILD_PARAMS} -target ${TARGET}")

SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${CUSTOM_BUILD_PARAMS}" CACHE STRING "toolchain_cflags" FORCE)
SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} ${CUSTOM_LINKER_PARAMS}" CACHE STRING "toolchain_cflags" FORCE)

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_HOME_DIRECTORY}/build/${OUTTARGET})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_HOME_DIRECTORY}/build/${OUTTARGET})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_HOME_DIRECTORY}/build/${OUTTARGET})

set(SOURCES
    ${WORKSPACE}/src/main.cpp
)

# set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

add_executable (jia ${SOURCES})

target_link_libraries(jia PRIVATE ${LINK_LIBRARIES})